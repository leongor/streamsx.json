//
// *******************************************************************************
// * Copyright (C)2015, International Business Machines Corporation and *
// * others. All Rights Reserved. *
// *******************************************************************************
//
namespace com.ibm.streamsx.json;

/**
* Default tuple type for representing JSON object.
* A JSON object is represented by its serialized
* form as an `rstring` using UTF-8 encoding.
* Matches the defaults supported by
* [JSONToTuple] and [TupleToJSON].
*/
type Json = rstring jsonString;


/**
* Default enum type for indexing internal parsed JSON object.
* The index connects parseJSON to queryJSON accordingly.
* [parseJSON] and [queryJSON].
*/
public composite JsonIndex {
	type
		static type_1 = enum{_1};
		static type_2 = enum{_2};
		static type_3 = enum{_3};
		static type_4 = enum{_4};
		static type_5 = enum{_5};
		static type_6 = enum{_6};
		static type_7 = enum{_7};
		static type_8 = enum{_8};
		static type_9 = enum{_9};
		static type_10 = enum{_10};
		static type_11 = enum{_11};
		static type_12 = enum{_12};
		static type_13 = enum{_13};
		static type_14 = enum{_14};
		static type_15 = enum{_15};
		static type_16 = enum{_16};
		static type_17 = enum{_17};
		static type_18 = enum{_18};
		static type_19 = enum{_19};
		static type_20 = enum{_20};
}

/**
* The enum type to represent the parsing status.
* [parseJSON].
*/
public composite JsonParseStatus {
	type
		static status = enum{PARSED, DOCUMENT_EMPTY, MULTIPLE_ROOTS, VALUE_INVALID, KEY_MISSING, COLON_MISSING,
							 OBJECT_COMMA_OR_BRACKET_MISSING, ARRAY_COMMA_OR_BRACKET_MISSING,
							 UNICODE_ESCAPE_INVALID, UNICODE_SURROGATE_INVALID,
							 STRING_ESCAPE_INVALID, STRING_QUOTATION_MISSING, STRING_INVALID_ENCODING, 	
							 NUMBER_TOO_BIG, NUMBER_MISS_FRACTION, NUMBER_MISS_EXPONENT, TERMINATION, SYNTAX_ERROR};
}

/**
* The enum type to represent the querying status.
* [queryJSON].
*/
public composite JsonStatus {
	type
		static status = enum{FOUND, FOUND_CAST, FOUND_WRONG_TYPE, FOUND_NULL, NOT_FOUND,
							 PATH_MUST_BEGIN_WITH_SLASH, INVALID_ESCAPE, INVALID_PERCENT_ENCODING, CHAR_MUST_PERCENT_ENCODING};
}

/**
* The tuple type to customize options for JSON formatting when using tupleToJSON, mapToJSON or toJSON functions.
* keysToReplace: change attribute names to JSON field names accordingly - {"spl_attribute_name" : "json-field-name"}.
* prefixToIgnore: ignore attribute names prefix to handle reserved keywords.
* maxFractionSize: format binary floats (float32/64) nicely, default size is 6.
* stripRoundFloats: cut the fraction part ('.0') for round floating point numbers, default is false.
* tsFormat: similar to strftime, for more details here: https://www.boost.org/doc/libs/1_55_0/doc/html/date_time/date_time_io.html#date_time.format_flags
* tsFormat: if empty, ctime function called (using local TZ).
* tsUTC: format timestamps in UTC (used in conjunction with tsFormat), default is false.
* [setFormatOptions].
*/
public composite JsonFormatOptions {
	type
		static options = tuple< map<rstring,rstring> keysToReplace,
								rstring prefixToIgnore,
								uint32 maxFractionSize,
								boolean stripRoundFloats,
								rstring tsFormat,
								boolean tsUTC>;
}
